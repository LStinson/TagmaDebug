.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MAN 1"
.TH MAN 1 "2011-09-13" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SS "\s-1NAME\s0"
.IX Subsection "NAME"
TagmaDebug \- Interactive \s-1TCL\s0 Debugger
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
tagmadebug.tcl [Options] [\-\-] YourScript.tcl
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c\fR" 10
.IX Item "-c"
Connect to a Tagma debug control server.
.IP "\fB\-H\fR \s-1HOST\s0" 10
.IX Item "-H HOST"
Connect to \s-1HOST\s0 instead of localhost.
.IP "\fB\-h\fR" 10
.IX Item "-h"
Display this text.
.IP "\fB\-P\fR \s-1PORT\s0" 10
.IX Item "-P PORT"
Connect to \s-1PORT\s0 instead of 5444.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBTagmaDebug\fR is a simple interactive debugger for \s-1TCL\s0 programs.
.PP
When \fBTagmaDebug\fR starts it creates a trace on "\fB_\|_TagmaDebugMain\fR.\*(L" This
procedure sources the script provided on the command line. The trace on this
procedure basically causes a break on every command. Once the script completes
the procedure \*(R"\fB_\|_TagmaDebugComplete\fR" is called. There is a hidden enter
trace on this procedure to ensure the user gets the debugger prompt one last
time.
.PP
The \fBunknown\fR command is replaced and the original called. If the original
unknown throws an error it is caught. The error message is displayed and the
debugger is entered.
.PP
All output from the debugger is written to \fBstderr\fR. This allows for
redirection of the program or debugger output if desired.
.PP
The debugger will not step into unknown.
.SH "PROMPT"
.IX Header "PROMPT"
The prompt is composed of flags in curly brackets '{}', the level of
execution, the procedure (if one is executing) and the name of the debugger.
.PP
The flags indicate when certain features are enabled. 'B' indicates the body
of precedures will be displayed. If disabled only the procedure name and
arguments are printed. 'E' indicates enter will continue a step, the same as
typing 'c Enter'. 'P' indicates packages will be stepped into. 'V' indicates
verbose mode is enabled.  This will cause additional output in certain places.
.PP
Sample prompt: {E}(1 => foo)Tagma>
.PP
This prompt indicates Enter will continue a step and execution is one level
deep in the procedure \*(L"foo\*(R".
.SH "COMMANDS"
.IX Header "COMMANDS"
There are several interactive commands that control the debugger. There is no
line editing and very little nicety.
.IP "\fB!\fR" 12
.IX Item "!"
Executes a shell command.
.IP "\fB=\fR" 12
.IX Item "="
Prints the content of each variable name provided.
.IP "\fBa\fR or \fB>\fR" 12
.IX Item "a or >"
Prints the command being executed.
.IP "\fBc\fR or Enter" 12
.IX Item "c or Enter"
Continue execution.
.IP "\fBe\fR or \fB[..]\fR" 12
.IX Item "e or [..]"
Evaluates \s-1TCL\s0 code. When using \fB[..]\fR The closing ']' is required.
.IP "\fBh\fR or \fB?\fR" 12
.IX Item "h or ?"
Prints the help text.
.IP "\fBf\fR or \fBff\fR" 12
.IX Item "f or ff"
Prints the stack frame. \fBff\fR prints also prints the line and file, when
available.
.Sp
Prints the Frame #, Level # (as in info level), Procedure name and command.
The command is truncated if it is multiple lines.
.IP "\fBvar log\fR" 12
.IX Item "var log"
Logs all modifications of a variable to stderr.
.IP "\fBvar break\fR" 12
.IX Item "var break"
Adds breakpoint for writes to a variable.
.IP "\fBvar info\fR" 12
.IX Item "var info"
Prints all variables being watched for.
.IP "\fBvar clear\fR" 12
.IX Item "var clear"
Clears logging and breaks for variables. Passes the variable to [string match
\&...] so globbing can be used.
.IP "\fBcmd enter\fR" 12
.IX Item "cmd enter"
Set a break point for the entering of a command.
.IP "\fBcmd leave\fR" 12
.IX Item "cmd leave"
Set a break point for the leaving of a command.
.IP "\fBcmd step\fR" 12
.IX Item "cmd step"
Steps through the command. Every command that is executed inside the command
is a breakpoint.
.IP "\fBcmd clear\fR" 12
.IX Item "cmd clear"
Clear break points. Passes the command to [string match ...] so globbing can
be used.
.IP "\fBcon\fR" 12
.IX Item "con"
Connect to a Tagma Debug control server.
Optional Host and port. (Default: localhost and 5444)
.IP "\fBp\fR" 12
.IX Item "p"
Prints the current level & procedure. When at the top level '::' is printed
for the procedure.
.IP "\fBr\fR" 12
.IX Item "r"
Restarts the program.
.IP "\fBx\fR or \fBq\fR" 12
.IX Item "x or q"
Exit the debugger. Ctrl-D should also have the same effect.
.SH "SETTINGS"
.IX Header "SETTINGS"
Settings to control TagmaDebug. These are reflected by the flags inside \fB{}\fR
in the prompt. The flags and settings use the same letter.
.IP "\fBB\fR" 8
.IX Item "B"
Toggle printing the body of procedures when they are defined.
.IP "\fBE\fR" 8
.IX Item "E"
Toggle Enter acting as a shortcut to 'c Enter'.
.IP "\fBP\fR" 8
.IX Item "P"
Toggle stepping into package.
.IP "\fBV\fR" 8
.IX Item "V"
Toggle verbosity. Print extra info, when available.
.SH "CONTROL SERVER"
.IX Header "CONTROL SERVER"
\&\fB\s-1NOTE:\s0\fR The shell does not work under Tkcon.
.PP
The program server.tcl starts a \s-1TCP\s0 server. Tagma Debug can connect to this
server for remote control. All debugger output and user input is sent to comes
from the server. The server requires an event loop process to function. By
default if the program is run it starts the server process, enters the remote
debug shell and starts an event loop. The shell is designed to make debugging
similar to using Tagma Debug directly.
.PP
The 'tagma' command is used to control the server and interact with the
debugger. With no options it sends its areguments to the remote debugger.
.PP
\&\fBtagma Options:\fR
.IP "\fB\-help\fR" 10
.IX Item "-help"
Print help for the tagma command.
.IP "\fB\-select\fR" 10
.IX Item "-select"
Select from connected debuggers. Lists the available and current connections
with no arguments.
.IP "\fB\-shell\fR" 10
.IX Item "-shell"
Enter an interactive shell. Simualtes working directly with the debugger. If
there is no active connection it will wait for a client to connect. The server
must be running before the shell is started.
.IP "\fB\-start\fR" 10
.IX Item "-start"
Start the Tagma server process. (Optional port)
.IP "\fB\-verbose\fR" 10
.IX Item "-verbose"
Control verbose mode. (on/off) Displays the current state with no arguments.
.IP "\fB\-\-\fR" 10
.IX Item "--"
End option processing.
.SH "PORTABILITY"
.IX Header "PORTABILITY"
\&\fBTagmaDebug\fR should work with any \s-1TCL\s0 version 8.4 or later. Testing has thus
far been limited to Tcl 8.5 under Cygwin on Windows 7.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
Either copy \fItagmadebug.tcl\fR where you want it or run \*(L"make install\*(R".
.SH "HOME"
.IX Header "HOME"
<https://github.com/LStinson/TagmaDebug>
.PP
<http://wiki.tcl.tk/28695>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This script is derived from \*(L"TclDebugger by S.Arnold. v0.1 2007\-09\-09\*(R" \-
<http://wiki.tcl.tk/19872>. What ever copyright he says his code is
under is what applies to this one. Since it was listed publicly with no
restrictions I am assuming it is free to modify.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Lorance Stinson \s-1AT\s0 Gmail....
